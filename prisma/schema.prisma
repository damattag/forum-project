generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  email    String @unique
  name     String
  password String
  role     String @default("STUDENT")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  questions Question[]
  answers   Answer[]
  comments  Comment[]

  @@map("users")
}

model Question {
  id String @id @default(uuid())

  title        String
  slug         String  @unique
  content      String
  authorId     String  @map("author_id")
  bestAnswerId String? @unique @map("best_answer_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  author      User         @relation(fields: [authorId], references: [id])
  bestAnswer  Answer?      @relation(fields: [bestAnswerId], references: [id], name: "best_answer")
  answers     Answer[]
  comments    Comment[]
  attachments Attachment[]

  @@map("questions")
}

model Answer {
  id String @id @default(uuid())

  content    String
  authorId   String @map("author_id")
  questionId String @map("question_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  author       User         @relation(fields: [authorId], references: [id])
  bestAnswerOn Question?    @relation(name: "best_answer")
  question     Question     @relation(fields: [questionId], references: [id])
  comments     Comment[]
  attachments  Attachment[]

  @@map("answers")
}

model Comment {
  id String @id @default(uuid())

  content    String
  authorId   String  @map("author_id")
  questionId String? @map("question_id")
  answerId   String? @map("answer_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  author   User      @relation(fields: [authorId], references: [id])
  question Question? @relation(fields: [questionId], references: [id])
  answer   Answer?   @relation(fields: [answerId], references: [id])

  @@map("comments")
}

model Attachment {
  id String @id @default(uuid())

  title      String
  url        String
  questionId String? @map("question_id")
  answerId   String? @map("answer_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  question Question? @relation(fields: [questionId], references: [id])
  answer   Answer?   @relation(fields: [answerId], references: [id])

  @@map("attachments")
}
